class Sudoku: 
    values = []
    def __init__(self, textInput):
        file = open(textInput, "r")
        for i in range(0, 9):
            line = file.readline().split(' ')
            self.values.append([])
            for j in range(0, 9):             
                self.values[i].append(cspSquare(int(line[j])))
                
    def printSudoku(self):
        for i in self.values: 
            for j in i: 
                print(j.value, end = ' ')
            print()
            
    def columnConstraint(self, row, column):
        popArray = []
        for i in self.values: 
            if (i[column].value != 0): 
                popArray.append(i[column].value)
            
        self.values[row][column].popDomain(popArray)
            
        
        

class cspSquare: 
    domain = [1,2,3,4,5,6,7,8,9]
    value = 0
    def __init__(self, value):
        if (value != 0):
            self.domain = []
            self.value = value
        
    def popDomain(self, values):
        for i in values: 
            if i in self.domain: 
                self.domain.remove(i)
                
        
    

s = Sudoku("input.txt")
s.printSudoku()
s.columnConstraint(0, 0)
print(s.values[2][0].domain)




    